USE vk;

SHOW TABLES;

DESC users;

SELECT * FROM users;
DROP TABLE IF EXISTS likes;
CREATE TABLE likes (
id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
user_id INT UNSIGNED NOT NULL,
target_id INT UNSIGNED NOT NULL,
target_type_id INT UNSIGNED NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP);

CREATE TABLE target_types (
id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255) NOT NULL UNIQUE,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP);

INSERT INTO target_types (name) VALUES
('message'), ('user'),('media'),('post');

INSERT INTO likes 
SELECT
  id, 
  FLOOR(1+(RAND()*100)), 
  FLOOR(1+(RAND()*100)),
  FLOOR(1+(RAND()*4)), 
  CURRENT_TIMESTAMP 
FROM messages;

SELECT * FROM likes ;

CREATE TABLE posts(
id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
user_ud INT UNSIGNED NOT NULL,
community_id INT UNSIGNED,
head VARCHAR(255),
body TEXT NOT NULL,
media_id INT UNSIGNED,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

ALTER TABLE profiles 
ADD CONSTRAINT profiles_user_id_fk
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
ADD CONSTRAINT profiles_photo_id_fk
  FOREIGN KEY (photo_id) REFERENCES media (id) ON DELETE SET NULL;
  
ALTER TABLE messages
ADD CONSTRAINT messages_from_user_id_fk
  FOREIGN KEY (from_user_id) REFERENCES users (id),
ADD CONSTRAINT messages_to_user_id_fk
  FOREIGN KEY (to_user_id) REFERENCES users (id);

SELECT * FROM  users WHERE id = 8;

SELECT first_name, last_name, 'main_photo', 'city' FROM users WHERE id = 8;

SELECT city FROM profiles WHERE user_id = 8;
SELECT first_name, last_name, 'main_photo', (SELECT city FROM profiles WHERE user_id = 8)AS city FROM users WHERE id = 8;

SELECT first_name, last_name, (SELECT file_path FROM media WHERE user_id = (SELECT photo_id FROM profiles WHERE user_id = 8)) AS main_photo,
(SELECT city FROM profiles WHERE user_id = 8)AS city FROM users WHERE id = 8;

SELECT first_name, last_name, 
(SELECT file_path FROM media WHERE id = (SELECT photo_id FROM profiles WHERE user_id = users.id)) AS file_path,
(SELECT city FROM profiles WHERE user_id = users.id)AS city FROM users WHERE id = 8;

SELECT file_path FROM media 
WHERE user_id = 9
AND media_type_id  = (SELECT id FROM media_types m WHERE m.name = 'photo') ORDER BY SIZE DESC LIMIT 10;

SELECT CONCAT ('User added photo', file_path, ' ', created_at) AS news FROM media WHERE user_id = 8 AND media_type_id = 'photo'

(SELECT friend_id FROM friendship WHERE user_id = 8)
UNION 
(SELECT user_id FROM friendship WHERE friend_id = 8);

UPDATE users SET age = FLOOR( RAND() * 100);
ALTER TABLE users ADD COLUMN age INT UNSIGNED NOT NULL;

SELECT COUNT(*) AS likes 
FROM likes WHERE user_id IN
(SELECT id FROM users
ORDER BY age ASC
HAVING COUNT(*) <=10
);

-------------------------homework----------------------------

--2--
SELECT COUNT(*) from likes where user_id IN(SELECT id FROM users WHERE id IN (SELECT user_id FROM profiles WHERE gender = 'f'))
SELECT COUNT(*) from likes where user_id IN(SELECT id FROM users WHERE id IN (SELECT user_id FROM profiles WHERE gender = 'm'))

--3--
SELECT * FROM users WHERE id IN(SELECT user_id from likes  GROUP BY user_id ORDER BY COUNT(id) ASC) LIMIT 10



